plugins {
    id 'fabric-loom' version '1.11.+'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
}

version = "${project.mod_version}+${project.minecraft_version}"
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    accessWidenerPath = file("src/main/resources/gofish.accesswidener")

    mods {
        "gofish" {
            sourceSet("main")
        }
    }
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven { url 'https://maven.nucleoid.xyz' }

}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation include('eu.pb4:factorytools:0.8.0+1.21.9')
    modImplementation "eu.pb4:polymer-resource-pack:${project.polymer_version}"
    modImplementation "eu.pb4:polymer-resource-pack-extras:${project.polymer_version}"
    modImplementation "eu.pb4:polymer-core:${project.polymer_version}"
    modImplementation "eu.pb4:polymer-virtual-entity:${project.polymer_version}"
    modImplementation "eu.pb4:polymer-autohost:${project.polymer_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 21
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

// Configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

if (System.getenv("MODRINTH")) {
    modrinth {
        token = System.getenv("MODRINTH")
        projectId = 'EAw8Gldo'// The ID of your modrinth project, slugs will not work.
        versionNumber = "" + version // The version of the mod to upload.
        versionType = "release"
        uploadFile = remapJar // This links to a task that builds your mod jar and sets "uploadFile" to the mod jar.
        gameVersions = [((String) project.minecraft_version)]
        changelog = System.getenv("CHANGELOG")
        loaders = ["fabric"/*, "quilt"*/]

        dependencies {
            required.project "polymer"
        }
    }

    remapJar {
        finalizedBy project.tasks.modrinth
    }
}
